# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestZndownload():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()

    cwd = os.getcwd()

    executable_path = os.path.join(cwd, 'chromedriver.exe')
    display(executable_path)

    download_path = os.path.join(cwd, 'local_download')
    fname = 'data_download.zip'
    full_local_filename = os.path.join(download_path, fname)

    chromeOptions = webdriver.ChromeOptions()
    chromeOptions.add_experimental_option("prefs", {
      "download.default_directory": download_path,
      "download.prompt_for_download": False,
      "download.directory_upgrade": True,
      "safebrowsing.enabled": True
    })
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_zndownload(self):
    # Test name: zn_download
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://www.barchart.com/")
    # 2 | setWindowSize | 1705x1380 | 
    self.driver.set_window_size(1705, 1380)
    # 3 | click | linkText=LOGIN | 
    self.driver.find_element(By.LINK_TEXT, "LOGIN").click()
    # 4 | click | name=email | 
    self.driver.find_element(By.NAME, "email").click()
    # 5 | type | name=email | mcbride1689@gmail.com
    self.driver.find_element(By.NAME, "email").send_keys("mcbride1689@gmail.com")
    # 6 | click | id=login-form-password | 
    self.driver.find_element(By.ID, "login-form-password").click()
    # 7 | click | id=login-form-password | 
    self.driver.find_element(By.ID, "login-form-password").click()
    # 8 | type | id=login-form-password | d5nJSz57A8C5
    self.driver.find_element(By.ID, "login-form-password").send_keys("d5nJSz57A8C5")
    # 9 | click | css=.bc-nui-modal-login__button | 
    self.driver.find_element(By.CSS_SELECTOR, ".bc-nui-modal-login__button").click()
    # 10 | click | linkText=Futures | 
    self.driver.find_element(By.LINK_TEXT, "Futures").click()
    # 11 | click | linkText=Financials | 
    self.driver.find_element(By.LINK_TEXT, "Financials").click()
    # 12 | click | id=table-guid-1a53bd62-386e-2bab-f4b1-2424f1c51fd8 | 
    self.driver.find_element(By.ID, "table-guid-1a53bd62-386e-2bab-f4b1-2424f1c51fd8").click()
    # 13 | click | linkText=Historical Data | 
    self.driver.find_element(By.LINK_TEXT, "Historical Data").click()
    # 14 | click | css=.bc-price-history-checkboxes .checkbox | 
    self.driver.find_element(By.CSS_SELECTOR, ".bc-price-history-checkboxes .checkbox").click()
    # 15 | click | css=.add | 
    self.driver.find_element(By.CSS_SELECTOR, ".add").click()
    # 16 | click | linkText=Options Prices | 
    self.driver.find_element(By.LINK_TEXT, "Options Prices").click()
    # 17 | click | name=moneyness | 
    self.driver.find_element(By.NAME, "moneyness").click()
    # 18 | select | name=moneyness | label=Show All
    dropdown = self.driver.find_element(By.NAME, "moneyness")
    dropdown.find_element(By.XPATH, "//option[. = 'Show All']").click()
    # 19 | click | name=futuresOptionsTime | 
    self.driver.find_element(By.NAME, "futuresOptionsTime").click()
    # 20 | select | name=futuresOptionsTime | label=Daily
    dropdown = self.driver.find_element(By.NAME, "futuresOptionsTime")
    dropdown.find_element(By.XPATH, "//option[. = 'Daily']").click()
    # 21 | click | css=.toolbar-button > span | 
    self.driver.find_element(By.CSS_SELECTOR, ".toolbar-button > span").click()
    # 22 | click | linkText=Volatility & Greeks | 
    self.driver.find_element(By.LINK_TEXT, "Volatility & Greeks").click()
    # 23 | click | name=moneyness | 
    self.driver.find_element(By.NAME, "moneyness").click()
    # 24 | select | name=moneyness | label=Show All
    dropdown = self.driver.find_element(By.NAME, "moneyness")
    dropdown.find_element(By.XPATH, "//option[. = 'Show All']").click()
    # 25 | click | css=.toolbar-button > span | 
    self.driver.find_element(By.CSS_SELECTOR, ".toolbar-button > span").click()
  
